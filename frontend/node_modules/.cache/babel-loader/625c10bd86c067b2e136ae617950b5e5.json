{"ast":null,"code":"/* global attachEvent */\n\n/**\n * Module requirements.\n */\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\n\nvar Polling = require('./polling');\n\nvar Emitter = require('component-emitter');\n\nvar inherit = require('component-inherit');\n\nvar debug = require('debug')('engine.io-client:polling-xhr');\n/**\n * Module exports.\n */\n\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n/**\n * Empty function\n */\n\nfunction empty() {}\n/**\n * XHR Polling constructor.\n *\n * @param {Object} opts\n * @api public\n */\n\n\nfunction XHR(opts) {\n  Polling.call(this, opts);\n  this.requestTimeout = opts.requestTimeout;\n  this.extraHeaders = opts.extraHeaders;\n\n  if (typeof location !== 'undefined') {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port; // some user agents have empty `location.port`\n\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    this.xd = typeof location !== 'undefined' && opts.hostname !== location.hostname || port !== opts.port;\n    this.xs = opts.secure !== isSSL;\n  }\n}\n/**\n * Inherits from Polling.\n */\n\n\ninherit(XHR, Polling);\n/**\n * XHR supports binary\n */\n\nXHR.prototype.supportsBinary = true;\n/**\n * Creates a request.\n *\n * @param {String} method\n * @api private\n */\n\nXHR.prototype.request = function (opts) {\n  opts = opts || {};\n  opts.uri = this.uri();\n  opts.xd = this.xd;\n  opts.xs = this.xs;\n  opts.agent = this.agent || false;\n  opts.supportsBinary = this.supportsBinary;\n  opts.enablesXDR = this.enablesXDR; // SSL options for Node.js client\n\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  opts.requestTimeout = this.requestTimeout; // other options for Node.js client\n\n  opts.extraHeaders = this.extraHeaders;\n  return new Request(opts);\n};\n/**\n * Sends data.\n *\n * @param {String} data to send.\n * @param {Function} called upon flush.\n * @api private\n */\n\n\nXHR.prototype.doWrite = function (data, fn) {\n  var isBinary = typeof data !== 'string' && data !== undefined;\n  var req = this.request({\n    method: 'POST',\n    data: data,\n    isBinary: isBinary\n  });\n  var self = this;\n  req.on('success', fn);\n  req.on('error', function (err) {\n    self.onError('xhr post error', err);\n  });\n  this.sendXhr = req;\n};\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\n\nXHR.prototype.doPoll = function () {\n  debug('xhr poll');\n  var req = this.request();\n  var self = this;\n  req.on('data', function (data) {\n    self.onData(data);\n  });\n  req.on('error', function (err) {\n    self.onError('xhr poll error', err);\n  });\n  this.pollXhr = req;\n};\n/**\n * Request constructor\n *\n * @param {Object} options\n * @api public\n */\n\n\nfunction Request(opts) {\n  this.method = opts.method || 'GET';\n  this.uri = opts.uri;\n  this.xd = !!opts.xd;\n  this.xs = !!opts.xs;\n  this.async = false !== opts.async;\n  this.data = undefined !== opts.data ? opts.data : null;\n  this.agent = opts.agent;\n  this.isBinary = opts.isBinary;\n  this.supportsBinary = opts.supportsBinary;\n  this.enablesXDR = opts.enablesXDR;\n  this.requestTimeout = opts.requestTimeout; // SSL options for Node.js client\n\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized; // other options for Node.js client\n\n  this.extraHeaders = opts.extraHeaders;\n  this.create();\n}\n/**\n * Mix in `Emitter`.\n */\n\n\nEmitter(Request.prototype);\n/**\n * Creates the XHR object and sends the request.\n *\n * @api private\n */\n\nRequest.prototype.create = function () {\n  var opts = {\n    agent: this.agent,\n    xdomain: this.xd,\n    xscheme: this.xs,\n    enablesXDR: this.enablesXDR\n  }; // SSL options for Node.js client\n\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  var xhr = this.xhr = new XMLHttpRequest(opts);\n  var self = this;\n\n  try {\n    debug('xhr open %s: %s', this.method, this.uri);\n    xhr.open(this.method, this.uri, this.async);\n\n    try {\n      if (this.extraHeaders) {\n        xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n\n        for (var i in this.extraHeaders) {\n          if (this.extraHeaders.hasOwnProperty(i)) {\n            xhr.setRequestHeader(i, this.extraHeaders[i]);\n          }\n        }\n      }\n    } catch (e) {}\n\n    if ('POST' === this.method) {\n      try {\n        if (this.isBinary) {\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n        } else {\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n        }\n      } catch (e) {}\n    }\n\n    try {\n      xhr.setRequestHeader('Accept', '*/*');\n    } catch (e) {} // ie6 check\n\n\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = true;\n    }\n\n    if (this.requestTimeout) {\n      xhr.timeout = this.requestTimeout;\n    }\n\n    if (this.hasXDR()) {\n      xhr.onload = function () {\n        self.onLoad();\n      };\n\n      xhr.onerror = function () {\n        self.onError(xhr.responseText);\n      };\n    } else {\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 2) {\n          try {\n            var contentType = xhr.getResponseHeader('Content-Type');\n\n            if (self.supportsBinary && contentType === 'application/octet-stream') {\n              xhr.responseType = 'arraybuffer';\n            }\n          } catch (e) {}\n        }\n\n        if (4 !== xhr.readyState) return;\n\n        if (200 === xhr.status || 1223 === xhr.status) {\n          self.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          setTimeout(function () {\n            self.onError(xhr.status);\n          }, 0);\n        }\n      };\n    }\n\n    debug('xhr data %s', this.data);\n    xhr.send(this.data);\n  } catch (e) {\n    // Need to defer since .create() is called directly fhrom the constructor\n    // and thus the 'error' event can only be only bound *after* this exception\n    // occurs.  Therefore, also, we cannot throw here at all.\n    setTimeout(function () {\n      self.onError(e);\n    }, 0);\n    return;\n  }\n\n  if (typeof document !== 'undefined') {\n    this.index = Request.requestsCount++;\n    Request.requests[this.index] = this;\n  }\n};\n/**\n * Called upon successful response.\n *\n * @api private\n */\n\n\nRequest.prototype.onSuccess = function () {\n  this.emit('success');\n  this.cleanup();\n};\n/**\n * Called if we have data.\n *\n * @api private\n */\n\n\nRequest.prototype.onData = function (data) {\n  this.emit('data', data);\n  this.onSuccess();\n};\n/**\n * Called upon error.\n *\n * @api private\n */\n\n\nRequest.prototype.onError = function (err) {\n  this.emit('error', err);\n  this.cleanup(true);\n};\n/**\n * Cleans up house.\n *\n * @api private\n */\n\n\nRequest.prototype.cleanup = function (fromError) {\n  if ('undefined' === typeof this.xhr || null === this.xhr) {\n    return;\n  } // xmlhttprequest\n\n\n  if (this.hasXDR()) {\n    this.xhr.onload = this.xhr.onerror = empty;\n  } else {\n    this.xhr.onreadystatechange = empty;\n  }\n\n  if (fromError) {\n    try {\n      this.xhr.abort();\n    } catch (e) {}\n  }\n\n  if (typeof document !== 'undefined') {\n    delete Request.requests[this.index];\n  }\n\n  this.xhr = null;\n};\n/**\n * Called upon load.\n *\n * @api private\n */\n\n\nRequest.prototype.onLoad = function () {\n  var data;\n\n  try {\n    var contentType;\n\n    try {\n      contentType = this.xhr.getResponseHeader('Content-Type');\n    } catch (e) {}\n\n    if (contentType === 'application/octet-stream') {\n      data = this.xhr.response || this.xhr.responseText;\n    } else {\n      data = this.xhr.responseText;\n    }\n  } catch (e) {\n    this.onError(e);\n  }\n\n  if (null != data) {\n    this.onData(data);\n  }\n};\n/**\n * Check if it has XDomainRequest.\n *\n * @api private\n */\n\n\nRequest.prototype.hasXDR = function () {\n  return typeof XDomainRequest !== 'undefined' && !this.xs && this.enablesXDR;\n};\n/**\n * Aborts the request.\n *\n * @api public\n */\n\n\nRequest.prototype.abort = function () {\n  this.cleanup();\n};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (typeof document !== 'undefined') {\n  if (typeof attachEvent === 'function') {\n    attachEvent('onunload', unloadHandler);\n  } else if (typeof addEventListener === 'function') {\n    var terminationEvent = 'onpagehide' in self ? 'pagehide' : 'unload';\n    addEventListener(terminationEvent, unloadHandler, false);\n  }\n}\n\nfunction unloadHandler() {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}","map":{"version":3,"names":["XMLHttpRequest","require","Polling","Emitter","inherit","debug","module","exports","XHR","Request","empty","opts","call","requestTimeout","extraHeaders","location","isSSL","protocol","port","xd","hostname","xs","secure","prototype","supportsBinary","request","uri","agent","enablesXDR","pfx","key","passphrase","cert","ca","ciphers","rejectUnauthorized","doWrite","data","fn","isBinary","undefined","req","method","self","on","err","onError","sendXhr","doPoll","onData","pollXhr","async","create","xdomain","xscheme","xhr","open","setDisableHeaderCheck","i","hasOwnProperty","setRequestHeader","e","withCredentials","timeout","hasXDR","onload","onLoad","onerror","responseText","onreadystatechange","readyState","contentType","getResponseHeader","responseType","status","setTimeout","send","document","index","requestsCount","requests","onSuccess","emit","cleanup","fromError","abort","response","XDomainRequest","attachEvent","unloadHandler","addEventListener","terminationEvent"],"sources":["/home/gabriel/Documentos/Semana-Omnistack7/frontend/node_modules/engine.io-client/lib/transports/polling-xhr.js"],"sourcesContent":["/* global attachEvent */\n\n/**\n * Module requirements.\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar Polling = require('./polling');\nvar Emitter = require('component-emitter');\nvar inherit = require('component-inherit');\nvar debug = require('debug')('engine.io-client:polling-xhr');\n\n/**\n * Module exports.\n */\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n\n/**\n * Empty function\n */\n\nfunction empty () {}\n\n/**\n * XHR Polling constructor.\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction XHR (opts) {\n  Polling.call(this, opts);\n  this.requestTimeout = opts.requestTimeout;\n  this.extraHeaders = opts.extraHeaders;\n\n  if (typeof location !== 'undefined') {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    this.xd = (typeof location !== 'undefined' && opts.hostname !== location.hostname) ||\n      port !== opts.port;\n    this.xs = opts.secure !== isSSL;\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(XHR, Polling);\n\n/**\n * XHR supports binary\n */\n\nXHR.prototype.supportsBinary = true;\n\n/**\n * Creates a request.\n *\n * @param {String} method\n * @api private\n */\n\nXHR.prototype.request = function (opts) {\n  opts = opts || {};\n  opts.uri = this.uri();\n  opts.xd = this.xd;\n  opts.xs = this.xs;\n  opts.agent = this.agent || false;\n  opts.supportsBinary = this.supportsBinary;\n  opts.enablesXDR = this.enablesXDR;\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  opts.requestTimeout = this.requestTimeout;\n\n  // other options for Node.js client\n  opts.extraHeaders = this.extraHeaders;\n\n  return new Request(opts);\n};\n\n/**\n * Sends data.\n *\n * @param {String} data to send.\n * @param {Function} called upon flush.\n * @api private\n */\n\nXHR.prototype.doWrite = function (data, fn) {\n  var isBinary = typeof data !== 'string' && data !== undefined;\n  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\n  var self = this;\n  req.on('success', fn);\n  req.on('error', function (err) {\n    self.onError('xhr post error', err);\n  });\n  this.sendXhr = req;\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nXHR.prototype.doPoll = function () {\n  debug('xhr poll');\n  var req = this.request();\n  var self = this;\n  req.on('data', function (data) {\n    self.onData(data);\n  });\n  req.on('error', function (err) {\n    self.onError('xhr poll error', err);\n  });\n  this.pollXhr = req;\n};\n\n/**\n * Request constructor\n *\n * @param {Object} options\n * @api public\n */\n\nfunction Request (opts) {\n  this.method = opts.method || 'GET';\n  this.uri = opts.uri;\n  this.xd = !!opts.xd;\n  this.xs = !!opts.xs;\n  this.async = false !== opts.async;\n  this.data = undefined !== opts.data ? opts.data : null;\n  this.agent = opts.agent;\n  this.isBinary = opts.isBinary;\n  this.supportsBinary = opts.supportsBinary;\n  this.enablesXDR = opts.enablesXDR;\n  this.requestTimeout = opts.requestTimeout;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n\n  this.create();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Request.prototype);\n\n/**\n * Creates the XHR object and sends the request.\n *\n * @api private\n */\n\nRequest.prototype.create = function () {\n  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  var xhr = this.xhr = new XMLHttpRequest(opts);\n  var self = this;\n\n  try {\n    debug('xhr open %s: %s', this.method, this.uri);\n    xhr.open(this.method, this.uri, this.async);\n    try {\n      if (this.extraHeaders) {\n        xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n        for (var i in this.extraHeaders) {\n          if (this.extraHeaders.hasOwnProperty(i)) {\n            xhr.setRequestHeader(i, this.extraHeaders[i]);\n          }\n        }\n      }\n    } catch (e) {}\n\n    if ('POST' === this.method) {\n      try {\n        if (this.isBinary) {\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n        } else {\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n        }\n      } catch (e) {}\n    }\n\n    try {\n      xhr.setRequestHeader('Accept', '*/*');\n    } catch (e) {}\n\n    // ie6 check\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = true;\n    }\n\n    if (this.requestTimeout) {\n      xhr.timeout = this.requestTimeout;\n    }\n\n    if (this.hasXDR()) {\n      xhr.onload = function () {\n        self.onLoad();\n      };\n      xhr.onerror = function () {\n        self.onError(xhr.responseText);\n      };\n    } else {\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 2) {\n          try {\n            var contentType = xhr.getResponseHeader('Content-Type');\n            if (self.supportsBinary && contentType === 'application/octet-stream') {\n              xhr.responseType = 'arraybuffer';\n            }\n          } catch (e) {}\n        }\n        if (4 !== xhr.readyState) return;\n        if (200 === xhr.status || 1223 === xhr.status) {\n          self.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          setTimeout(function () {\n            self.onError(xhr.status);\n          }, 0);\n        }\n      };\n    }\n\n    debug('xhr data %s', this.data);\n    xhr.send(this.data);\n  } catch (e) {\n    // Need to defer since .create() is called directly fhrom the constructor\n    // and thus the 'error' event can only be only bound *after* this exception\n    // occurs.  Therefore, also, we cannot throw here at all.\n    setTimeout(function () {\n      self.onError(e);\n    }, 0);\n    return;\n  }\n\n  if (typeof document !== 'undefined') {\n    this.index = Request.requestsCount++;\n    Request.requests[this.index] = this;\n  }\n};\n\n/**\n * Called upon successful response.\n *\n * @api private\n */\n\nRequest.prototype.onSuccess = function () {\n  this.emit('success');\n  this.cleanup();\n};\n\n/**\n * Called if we have data.\n *\n * @api private\n */\n\nRequest.prototype.onData = function (data) {\n  this.emit('data', data);\n  this.onSuccess();\n};\n\n/**\n * Called upon error.\n *\n * @api private\n */\n\nRequest.prototype.onError = function (err) {\n  this.emit('error', err);\n  this.cleanup(true);\n};\n\n/**\n * Cleans up house.\n *\n * @api private\n */\n\nRequest.prototype.cleanup = function (fromError) {\n  if ('undefined' === typeof this.xhr || null === this.xhr) {\n    return;\n  }\n  // xmlhttprequest\n  if (this.hasXDR()) {\n    this.xhr.onload = this.xhr.onerror = empty;\n  } else {\n    this.xhr.onreadystatechange = empty;\n  }\n\n  if (fromError) {\n    try {\n      this.xhr.abort();\n    } catch (e) {}\n  }\n\n  if (typeof document !== 'undefined') {\n    delete Request.requests[this.index];\n  }\n\n  this.xhr = null;\n};\n\n/**\n * Called upon load.\n *\n * @api private\n */\n\nRequest.prototype.onLoad = function () {\n  var data;\n  try {\n    var contentType;\n    try {\n      contentType = this.xhr.getResponseHeader('Content-Type');\n    } catch (e) {}\n    if (contentType === 'application/octet-stream') {\n      data = this.xhr.response || this.xhr.responseText;\n    } else {\n      data = this.xhr.responseText;\n    }\n  } catch (e) {\n    this.onError(e);\n  }\n  if (null != data) {\n    this.onData(data);\n  }\n};\n\n/**\n * Check if it has XDomainRequest.\n *\n * @api private\n */\n\nRequest.prototype.hasXDR = function () {\n  return typeof XDomainRequest !== 'undefined' && !this.xs && this.enablesXDR;\n};\n\n/**\n * Aborts the request.\n *\n * @api public\n */\n\nRequest.prototype.abort = function () {\n  this.cleanup();\n};\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (typeof document !== 'undefined') {\n  if (typeof attachEvent === 'function') {\n    attachEvent('onunload', unloadHandler);\n  } else if (typeof addEventListener === 'function') {\n    var terminationEvent = 'onpagehide' in self ? 'pagehide' : 'unload';\n    addEventListener(terminationEvent, unloadHandler, false);\n  }\n}\n\nfunction unloadHandler () {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}